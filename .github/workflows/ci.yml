name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test
    - name: Run lint
      run: npm run lint

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/mcm_proto:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/mcm_proto:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/mcm_proto:buildcache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/mcm_proto:latest
          docker stop mcm_proto || true
          docker rm mcm_proto || true
          docker run -d --name mcm_proto \
            -p 3000:3000 \
            --env-file .env \
            ${{ secrets.DOCKER_USERNAME }}/mcm_proto:latest 